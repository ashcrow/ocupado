{"name":"Ocupado","tagline":"Plug-in based user checking tool","body":"# ocupado\r\nPlug-in based tool which checks a user data source against an authoritative source and alerts on any anomalies.\r\n\r\n[![Build Status](https://api.travis-ci.org/ashcrow/ocupado.png)](https://travis-ci.org/ashcrow/ocupado/)\r\n\r\n## Example Usage\r\n```\r\n$ ocupado -V conf/test.ini\r\n- Plugins loaded: ['ocupado.plugin.test:Test']\r\n- Plugins initialized: ['ocupado.plugin.test:Test']\r\n- Getting users for plugin ocupado.plugin.test:Test\r\n- Could not find user example in the authoritative plugin\r\n- Notifying via ocupado.output.test:Test for: ['example']\r\n$\r\n```\r\n\r\n## Available Plugins\r\n* [LDAP](https://github.com/ashcrow/ocupado_plugin_ldap)\r\n* [GoogleGroups](https://github.com/ashcrow/ocupado_plugin_google_groups)\r\n\r\n## Available Outputs\r\n* SMTP (built in)\r\n\r\n## Configuration\r\nWhile the configuration system has been built to allow for future extending a simple INI style\r\nconfiguration is shipped and shown in examples.\r\n\r\n### INI Sections\r\nThere are three required sections: plugin, output, and authoritative. Each uses the same\r\nformat and expects a list of ```module = class``` like so:\r\n\r\n```ini\r\n[plugin]\r\nmy.plugin.module = PluginClass\r\nanother.plugin.module = AnotherClass\r\n```\r\n\r\nEach ```module = class``` is configured with it's *own section* using the the module as the\r\nsection name. This section takes ```key = value``` pairs which will be passed to a plugin's\r\n```__init__```. For instance, to configure ```my.plugin.module = PluginClass``` above:\r\n\r\n```ini\r\n[my.plugin.module]\r\nusername = user\r\ndomain = example.org\r\n# ...\r\n```\r\n\r\nNote that the authoritative section specifies the single authoritative data source. There\r\nis no support for multiple sources of truth.\r\n\r\nCheck out this [simple example](https://github.com/ashcrow/ocupado/blob/master/conf/test.ini) for\r\na complete config using the test plugins.\r\n\r\n## Writing Plugins\r\n```ocupado``` provides multiple ways to modify and extend it's usage. However, the most useful way to\r\ncustomize the tool is through plugins. Plugins are Python modules which define how to work with an external\r\ndatasource. The module must provide a class which subclasses [ocupado.plugin.Plugin](https://github.com/ashcrow/ocupado/blob/master/src/ocupado/plugin/__init__.py) and, of course, must be installed on the system for use.\r\n\r\n## Writing Outputs\r\nSimilar to Plugins, outputs provide a way to extend the functionality of ```ocupado``` by defining new ways for\r\nthe resulting output to be processed. ```ocupado``` comes with the SMTP output which can be configured to send\r\nan email to a list of users noting what users were found to not match the authoritative plugin.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}